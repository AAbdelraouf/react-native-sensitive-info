(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{115:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return f}));var n=r(0),i=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=i.a.createContext({}),l=function(e){var t=i.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),b=n,f=u["".concat(o,".").concat(b)]||u[b]||d[b]||a;return r?i.a.createElement(f,c(c({ref:t},p),{},{components:r})):i.a.createElement(f,c({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var p=2;p<a;p++)o[p]=r[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},78:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return l}));var n=r(2),i=r(6),a=(r(0),r(115)),o={id:"security",title:"Security",sidebar_label:"Security"},c={unversionedId:"security",id:"version-6.x/security",isDocsHomePage:!1,title:"Security",description:"Jailbroken/Rooted devices can access your iOS' Keychain and Android's shared preferences in plain text, so it is necessary to add another layer of protection.",source:"@site/versioned_docs/version-6.x/security.md",permalink:"/react-native-sensitive-info/docs/security",editUrl:"https://github.com/mCodex/react-native-sensitive-info/tree/website/versioned_docs/version-6.x/security.md",version:"6.x",lastUpdatedBy:"Mateus Andrade",lastUpdatedAt:1596129524,sidebar_label:"Security",sidebar:"version-6.x/someSidebar",previous:{title:"Installation",permalink:"/react-native-sensitive-info/docs/installation"},next:{title:"deleteItem",permalink:"/react-native-sensitive-info/docs/deleteItem"}},s=[],p={rightToc:s};function l(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Jailbroken/Rooted devices can access your iOS' Keychain and Android's shared preferences in plain text, so it is necessary to add another layer of protection."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"iOS:")," it is implemented through ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.apple.com/documentation/security/secaccesscontrol"}),"Access Control"),". Everytime the app wants to access the protected keychain item, a prompt by iOS will show up. Only after authentication success will return the requested item.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Android")," it is implemented through ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.html"}),"FingerprintManager")," + Keystore . Keystore has a function called ",Object(a.b)("inlineCode",{parentName:"p"},"setUserAuthenticationRequired")," which makes Keystore requires user authentication before getting value."))),Object(a.b)("p",null,"Check out this ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"protectingWithFingerprint"}),"recipe")," to enable fingerprint/FaceID protection."))}l.isMDXComponent=!0}}]);